syntax = "proto3";
package api;

// option go_package = "github.com/chainbound/fiber/protobuf/api";

import "eth.proto";

service API {
    rpc SubscribeNewTxs (TxFilter) returns (stream eth.Transaction) {}
    rpc SubscribeNewBlocks (BlockFilter) returns (stream eth.Block) {}
    rpc SendTransaction (eth.Transaction) returns (TransactionResponse) {}
    rpc SendRawTransaction(RawTxMsg) returns (TransactionResponse) {}
    // Backrun is the RPC method for backrunning a transaction.
    rpc Backrun(BackrunMsg) returns (TransactionResponse) {}
    rpc RawBackrun(RawBackrunMsg) returns (TransactionResponse) {}
    rpc SendTransactionStream (stream eth.Transaction) returns (stream TransactionResponse) {}
    rpc SendRawTransactionStream(stream RawTxMsg) returns (stream TransactionResponse) {}
    // Backrun is the RPC method for backrunning a transaction.
    rpc BackrunStream(stream BackrunMsg) returns (stream TransactionResponse) {}
    rpc RawBackrunStream(stream RawBackrunMsg) returns (stream TransactionResponse) {}
}

message TxFilter {
    bytes encoded = 1;
}

message BlockFilter {
    string producer = 1;
}

message RawTxMsg {
    bytes rawTx = 1;
}

message TransactionResponse {
    string hash = 1;
    int64 timestamp = 2;
}

message BackrunMsg {
    string hash = 1;
    eth.Transaction tx = 2;
}

message RawBackrunMsg {
    string hash = 1;
    bytes rawTx = 2;
}
